[{"/home/carter/Desktop/Cours/Thèse/Programming_economics/jsprojects/research/tinbergen_1936/src/index.js":"1","/home/carter/Desktop/Cours/Thèse/Programming_economics/jsprojects/research/kaldor_1940/src/index.js":"2"},{"size":8769,"mtime":1607218444051,"results":"3","hashOfConfig":"4"},{"size":18855,"mtime":1643323906392,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9tgqxk",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"19w9ssz","/home/carter/Desktop/Cours/Thèse/Programming_economics/jsprojects/research/tinbergen_1936/src/index.js",[],"/home/carter/Desktop/Cours/Thèse/Programming_economics/jsprojects/research/kaldor_1940/src/index.js",["12"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Plotly from 'plotly.js-gl3d-dist';// see https://github.com/plotly/plotly.js/tree/master/dist#partial-bundles\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n// import {InlineMath} from 'react-katex';\n\nvar odex = require('odex');// see https://github.com/littleredcomputer/odex-js\nvar s = new odex.Solver(2);\n\nvar KaldorCS = function(Iy,Ik,Iky,bari,Syk,Sy,Sy2,Sy3,bars,delta,alpha) {\n  return function(x, y) {\n\tlet inv = Inv(y[0],y[1],Iy,Ik,Iky,bari)\n\treturn [\n\t  // alpha*(-0.00000000153*y[0]**3+0.00004744*y[0]**2+(Iy-0.4719)*y[0]-Ik*y[1]+(bari+748.1)),\n\t  alpha*(inv-Sav(y[0],y[1],Syk,Sy,Sy2,Sy3,bars)),\n\t  inv - delta*y[1]\n\t];\n  };\n};\n\nconst Plot = createPlotlyComponent(Plotly);\n\nconst steps = {\n\tmaxgdp: 100,\n\tmaxcap: 100,\n\ttfinal: 5,\n\talpha: 0.05,\n\tIy: 0.01,\n\tIk: 0.001,\n\tIky: 0.0000001,\n\tbari: 25,\n\tSyk: 0.0000001,\n\tSy: 0.01,\n\tSy2: 0.000001,\n\tSy3: 0.0000000001,\n\tbars: 1,\n\tdelta: 0.01,\n\tY0: 100,\n\tK0: 500\n}\n\nfunction Inv(Y,K,Iy,Ik,Iky,bari){\n\treturn(Iy*Y + Iky*(Y*K) + Ik*K + bari)\n}\n\nfunction Sav(Y,K,Syk,Sy,Sy2,Sy3,bars){\n\treturn(Syk*Y*K+Sy3*Y**3+Sy2*Y**2+Sy*Y+bars)\n}\n\nfunction locus_ydot(Y,Iy,Ik,Iky,bari,Syk,Sy,Sy2,Sy3,bars){\n\treturn((bari-bars+(Iy-Sy)*Y-Sy3*Y**3-Sy2*Y**2)/((Syk-Iky)*Y-Ik))\n}\n\nconst gdp_points = [3178.182,3259.97075,3343.54675,3548.4085,3702.94325,3916.2795,4170.74975,4445.853,4567.78075,4792.31475,4942.067,4951.2615,5114.3245,5383.28175,5687.20675,5656.465,5644.843,5948.995,6224.0865,6568.60825,6776.58,6759.18075,6930.71025,6805.758,7117.72875,7632.81225,7951.074,8226.3915,8510.99,8866.49875,9192.134,9365.494,9355.35475,9684.89175,9951.5025,10352.43175,10630.3205,11031.34975,11521.93825,12038.283,12610.49125,13130.9865,13262.07925,13493.0645,13879.1285,14406.3825,14912.50875,15338.25675,15626.0295,15604.6875,16197.0075,16495.3695,16912.03775,17432.17,17730.5085,18144.10475,18687.786,19091.66225]\n\nconst cap_points = [14239.895,14711.917,15205.273,15759.578,16361.41,17023.688,17752.528,18530.992,19263.544,20015.188,20760.19,21404.616,22058.784,22805.318,23631.742,24335.552,24870.554,25504.854,26279.792,27203.124,28174.17,28983.3,29770.398,30400.94,31125.588,32101.15,33160.38,34217.176,35245.904,36263.696,37283.484,38223.836,38987.08,39793.464,40663.208,41620.812,42632.688,43758.388,44977.192,46345.16,47827.896,49368.264,50734.812,51925.832,53184,54572.832,56084.492,57575.292,58915.288,59981.816,62435.628,63232.936,64124.208,65057.808,65974.06,66942.704,68007.352,69059.064]\n\nconst btn_choices = [\"is3d\",\"is\",\"phase\",\"traj\"]\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tparams: {\n\t\t\t\tmaxgdp: 35000,\n\t\t\t\tmaxcap: 70000,\n\t\t\t\ttfinal: 100,\n\t\t\t\talpha: 0.1,\n\t\t\t\tIy: 0.4729,\n\t\t\t\tIk: -0.08407,\n\t\t\t\tIky: -0.000001394,\n\t\t\t\tbari: -266.6,\n\t\t\t\tSyk: 0.000008126,\n\t\t\t\tSy: 0.4602,\n\t\t\t\tSy2: -0.00008185,\n\t\t\t\tSy3: 0.000000001805,\n\t\t\t\tbars: -742.4,\n\t\t\t\tdelta: 0.02,\n\t\t\t\tY0: 16495,\n\t\t\t\tK0: 63232\n\t\t\t},\n\t\t\tgraph_sel: {\n\t\t\t\tvalue: \"is3d\",\n\t\t\t\tis3d_sel: \"sel\",\n\t\t\t\tis_sel: \"\",\n\t\t\t\tphase_sel: \"\",\n\t\t\t\ttraj_sel: \"\" \n\t\t\t},\n\t\t\tdata_is3d: [\n\t\t\t\t{\n\t\t\t\t\tx: gdp_points,\n\t\t\t\t\ty: cap_points,\n\t\t\t\t\tz: [-23.891,-28.666,-34.634,8.56,24.541,61.268,110.056,163.074,151.332,183.271,182.144,127.599,140.185,190.74,248.774,170.526,116.234,190.937,239.374,303.597,303.248,220.052,220.46,107.56,173.758,302.596,338.068,354.572,376.891,429.396,468.124,449.76,371.382,430.63,456.733,529.279,544.503,598.366,678.396,752.236,835.143,888.883,801.699,772.059,796.562,862.156,904.484,915.322,886.464,765.255,734.13,763.89,828.26,926.559,940.907,992.521,1081.649,1117.941],// I fitted\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Investment',\n\t\t\t\t\tline: {\n\t\t\t\t\t\twidth: 10,\n\t\t\t\t\t\tcolor: 'green'\n\t\t\t\t\t},\n\t\t\t\t\topacity: 0.7,\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>I: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: gdp_points,\n\t\t\t\t\ty: cap_points,\n\t\t\t\t\tz: [319.246,340.348,361.971,395.166,423.471,454.824,485.944,514.006,539.131,561.504,584.597,610.081,628.704,642.392,651.83,687.317,712.953,711.798,715.714,712.734,730.872,778.286,793.276,848.984,837.898,795.64,792.262,796.798,796.11,774.567,759.015,780.386,841.322,809.018,798.927,753.955,751.612,719.741,666.302,618.79,565.821,542.29,642.903,693.019,702.12,685.626,700.583,749.619,831,972.585,1126.034,1154.879,1173.381,1184.416,1252.131,1313.114,1380.145,1483.798],// S fitted\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Savings',\n\t\t\t\t\tline: {\n\t\t\t\t\t\twidth: 10,\n\t\t\t\t\t\tcolor: 'red'\n\t\t\t\t\t},\n\t\t\t\t\topacity: 0.7,\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>S: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: gdp_points,\n\t\t\t\t\ty: cap_points,\n\t\t\t\t\tz: [56.089,54.581,55.87675,65.477,69.7055,76.1545,89.5025,102.446,96.8115,102.808,108.212,93.01525,106.40675,127.825,153.8825,143.7985,103.14575,152.6435,199.94525,256.74875,285.866,237.61825,291.33925,201.014,246.0585,414.8765,409.3895,401.93975,416.43125,410.86675,431.87625,395.286,306.045,348.879,395.20875,495.0495,502.79625,576.70725,682.8795,770.93575,856.60125,916.03075,747.216,716.119,772.19625,945.63175,1076.9835,1127.725,1012.22625,748.36675,666.788,745.19775,831.71925,948.37775,840.169,902.5905,1071.734,1083.1045], // I real\n\t\t\t\t\tmode: 'markers',\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tsize: 5,\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\tcolor: 'rgba(25, 25, 25, 25)',\n\t\t\t\t\t\t\twidth: 0.5\n\t\t\t\t\t\t},\n\t\t\t\t\t\topacity: 0.8},\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>I: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: gdp_points,\n\t\t\t\t\ty: cap_points,\n\t\t\t\t\tz: [328.333,328.192,377.495,397.312,397.476,454.07,477.334,496.173,563.016,542.879,538.791,633.819,689.126,665.165,765.138,752.3,756.505,691.409,663.74,704.027,698.969,747.205,812.061,819.546,714.768,864.555,728.403,725.642,673.092,751.489,769.647,783.624,823.364,914.86,788.153,715.282,743.002,723.366,729.67,817.789,634.843,631.241,665.166,786.99,767.97,737.105,459.705,582.76,571.382,776.772,1429.596,1054.345,1243.287,1314.462,1220.184,1303.359,1465.56,1439.44], // S real\n\t\t\t\t\tmode: 'markers',\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tsize: 5,\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\tcolor: 'rgba(25, 25, 25, 25)',\n\t\t\t\t\t\t\twidth: 0.5\n\t\t\t\t\t\t},\n\t\t\t\t\t\topacity: 0.8\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>S: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tz: [],\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Investment',\n\t\t\t\t\tline: {\n\t\t\t\t\t\twidth: 5,\n\t\t\t\t\t\tcolor: 'rgba(35, 79, 35, 25)',\n\t\t\t\t\t},\n\t\t\t\t\topacity: 0.7,\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>I: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tz: [],\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Savings',\n\t\t\t\t\tline: {\n\t\t\t\t\t\twidth: 5,\n\t\t\t\t\t\tcolor: 'rgba(142, 0, 0, 25)',\n\t\t\t\t\t},\n\t\t\t\t\topacity: 0.7,\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>S: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],\n\t\t\t\t\tz: [],\n\t\t\t\t\tmode: 'markers',\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tsize: 5,\n\t\t\t\t\t\tline: {\n\t\t\t\t\t\t\tcolor: 'rgba(217, 217, 217, 0.14)',\n\t\t\t\t\t\t\twidth: 0.2\n\t\t\t\t\t\t},\n\t\t\t\t\t\topacity: 0.8\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'scatter3d',\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<br>S: %{z:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t}\n\t\t\t],\n\t\t\tdata_is: [\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// I\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: \"Investment\",\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"black\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// S\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: \"Savings\",\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"red\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false\n\t\t\t\t}\n\t\t\t],\n\t\t\tdata_phase: [\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [], // y-y\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"blue\"\n\t\t\t\t\t},\t\t\t\t\t\n\t\t\t\t\tname: \"Constant income locus\",\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// k-k\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Constant capital locus',\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"green\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// trajectory\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Trajectory',\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"black\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t'Y: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t}\n\t\t\t],\n\t\t\tdata_traj: [\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// I\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: \"Income\",\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"black\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t't: %{x:.0f}' +\n\t\t\t\t\t\t'<br>Y: %{y:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: [],// S\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tmode: 'lines',\n\t\t\t\t\tname: 'Capital',\n\t\t\t\t\tline: {\n\t\t\t\t\t\tcolor: \"red\"\n\t\t\t\t\t},\n\t\t\t\t\tshowlegend: false,\n\t\t\t\t\thovertemplate: \n\t\t\t\t\t\t't: %{x:.0f}' +\n\t\t\t\t\t\t'<br>K: %{y:.0f}' +\n\t\t\t\t\t\t'<extra></extra>'\n\t\t\t\t}\n\t\t\t],\n\t\t\tlayout_is3d: {\n\t\t\t\tautosize: true,\n\t\t\t\thovermode: 'closest',\n\t\t\t\tshowlegend: false,\n\t\t\t\tmargin: {\n\t\t\t\t\tl: 50,\n\t\t\t\t\tr: 50,\n\t\t\t\t\tb: 50,\n\t\t\t\t\tt: 50,\n\t\t\t\t\tpad: 4\n\t\t\t\t},\n\t\t\t\tpaper_bgcolor: '#cecece',\n\t\t\t\t//plot_bgcolor: '#cccccc',\n\t\t\t\t// domain: {\n\t\t\t\t// \tx: [0.00,  0.33], \n\t\t\t\t// \ty: [0.5, 1]\n\t\t\t\t// },\n\t\t\t\tscene: {\n\t\t\t\t\txaxis:{title: 'Income, Y'},\n\t\t\t\t\tyaxis:{title: 'Capital, K'},\n\t\t\t\t\tzaxis:{title: 'Investment (I), Savings (S)'},\n\t\t\t\t\tcamera: {\n\t\t\t\t\t\tcenter: {\n\t\t\t\t\t\t\tx: -0.05, y: -0.08, z: -0.2 \n\t\t\t\t\t\t}, \n\t\t\t\t\t\teye: { \n\t\t\t\t\t\t\tx: 1.15, y: -1.45, z: 0.25 \n\t\t\t\t\t\t}, \n\t\t\t\t\t\tup: {\n\t\t\t\t\t\t\tx: 0, y: 0, z: 1 \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tlayout_is: {\n\t\t\t\tautosize: true,\n\t\t\t\tshowlegend: true,\n\t\t\t\thovermode: 'closest',\n\t\t\t\tmargin: {\n\t\t\t\t\tl: 50,\n\t\t\t\t\tr: 50,\n\t\t\t\t\tb: 50,\n\t\t\t\t\tt: 50,\n\t\t\t\t\tpad: 4\n\t\t\t\t},\n\t\t\t\tpaper_bgcolor: '#cecece',\n\t\t\t\t//plot_bgcolor: '#cccccc',\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: \"Investment (I), Savings (S)\",\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\t\t// autorange: true,\n\t\t\t\t\trange: []\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttitle: 'Income (Y)',\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\tautorange: true,\n\t\t\t\t// range: []\n\t\t\t\t}\n\t\t\t},\n\t\t\tlayout_phase: {\n\t\t\t\tautosize: true,\n\t\t\t\tshowlegend: false,\n\t\t\t\thovermode: 'closest',\n\t\t\t\tmargin: {\n\t\t\t\t\tl: 50,\n\t\t\t\t\tr: 50,\n\t\t\t\t\tb: 50,\n\t\t\t\t\tt: 50,\n\t\t\t\t\tpad: 4\n\t\t\t\t},\n\t\t\t\tpaper_bgcolor: '#cecece',\n\t\t\t\t//plot_bgcolor: '#cccccc',\n\t\t\t\tyaxis: {\n\t\t\t\t\tautorange: true,\n\t\t\t\t\ttitle: \"Capital stock, K\",\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\t\trange: []\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttitle: 'Income, Y',\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\t\tautorange: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tlayout_traj: {\n\t\t\t\tautosize: true,\n\t\t\t\tshowlegend: false,\n\t\t\t\thovermode: 'closest',\n\t\t\t\tmargin: {\n\t\t\t\t\tl: 50,\n\t\t\t\t\tr: 50,\n\t\t\t\t\tb: 50,\n\t\t\t\t\tt: 50,\n\t\t\t\t\tpad: 4\n\t\t\t\t},\n\t\t\t\tpaper_bgcolor: '#cecece',\n\t\t\t\t//plot_bgcolor: '#cccccc',\n\t\t\t\tyaxis: {\n\t\t\t\t\ttitle: '',\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\t\tautorange: true\n\t\t\t\t},\n\t\t\t\txaxis: {\n\t\t\t\t\ttitle: 'Time, t',\n\t\t\t\t\ttitlefont: {\n\t\t\t\t\t\tfamily: 'Arial, sans-serif',\n\t\t\t\t\t\tsize: 18,\n\t\t\t\t\t\tcolor: '#333'\n\t\t\t\t\t},\n\t\t\t\t\tautorange: true\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.computeEquilibrium = this.computeEquilibrium.bind(this);\n\t\tthis.handleGraph = this.handleGraph.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.computeEquilibrium(this.state.params);\n\t}\n\n\thandleGraph(event) {\n\t\tif(event.target.name !== this.state.graph_sel){\n\t\t\tvar graph_sel = {\n\t\t\t\tvalue: event.target.name\n\t\t\t}\n\t\t\tgraph_sel[event.target.name+\"_sel\"] = \"sel\"\n\t\t\tgraph_sel[btn_choices[(btn_choices.indexOf(event.target.name)+1)%2]+\"_sel\"] = \"\"\n\t\t\tthis.setState({\n\t\t\t\tgraph_sel\n\t\t\t}, function() {\n\t\t\t\tthis.computeEquilibrium(this.state.params);\n\t\t\t})\n\t\t}\n\t}\n\n\thandleChange(event) {\n\t\tlet partialState = Object.assign({}, this.state);\n\n\t\tpartialState.params[event.target.name] = parseFloat(event.target.value);\n\t\tthis.setState(partialState, function() {\n\t\t\tthis.computeEquilibrium();\n\t\t});\n\t}\n\n\tcomputeEquilibrium() {\n\t\tvar params = this.state.params;\n\t\t// console.log(this.state.layout_is3d) // To find best camera angles\n\n\t\tlet income = [];\n\t\tlet capital = [];\n\t\tlet time = [];\n\n\t\ts.denseOutput = true;  // request interpolation closure in solution callback\n\n\t\ts.solve(KaldorCS(params.Iy,params.Ik,params.Iky,params.bari,params.Syk,params.Sy,params.Sy2,params.Sy3,params.bars,params.delta,params.alpha),\n\t\t\t0,    // initial x value\n\t\t\t[params.Y0,params.K0],  // initial y values (just one in this example)\n\t\t\tparams.tfinal, // final x value\n\t\t\ts.grid(0.5, function(x,y) {\n\t\t\t\t// console.log(x,y)\n\t\t\t\t\ttime.push(x);\n\t\t\t\t\tincome.push(y[0]);\n\t\t\t\t\tcapital.push(y[1]);\n\t\t\t}));  \n\n\t\tif(this.state.graph_sel.value === 'is3d'){\n\t\t\tlet inv = [];\n\t\t\tlet sav = [];\n\t\t\tfor(let i = 0; i <= time.length; i++){\n\t\t\t\tinv.push(Inv(income[i],capital[i],params.Iy,params.Ik,params.Iky,params.bari));\n\t\t\t\tsav.push(Sav(income[i],capital[i],params.Syk,params.Sy,params.Sy2,params.Sy3,params.bars));\n\t\t\t}\n\n\t\t\tlet partialState = Object.assign({}, this.state);\n\t\t\tpartialState.data_is3d[4].x = income;\n\t\t\tpartialState.data_is3d[4].y = capital;\n\t\t\tpartialState.data_is3d[4].z = inv;\n\n\t\t\tpartialState.data_is3d[5].x = income;\n\t\t\tpartialState.data_is3d[5].y = capital;\n\t\t\tpartialState.data_is3d[5].z = sav;\n\n\t\t\tpartialState.data_is3d[6].x = [params.Y0,params.Y0];\n\t\t\tpartialState.data_is3d[6].y = [params.K0,params.K0];\n\t\t\tpartialState.data_is3d[6].z = [inv[0],sav[0]];\n\n\t\t\t// See https://github.com/plotly/react-plotly.js#refreshing-the-plot and the discussion here https://github.com/plotly/react-plotly.js/issues/59\n\t\t\tconst newLayout = Object.assign({}, this.state.layout_is3d);\n\t\t\tnewLayout.datarevision = (partialState.layout_is3d.datarevision + 1) % 10;\n\t\t\tthis.setState({\n\t\t\t\tdata_is3d: partialState.data_is3d,\n\t\t\t\tlayout_is3d: newLayout\n\t\t\t})\n\n\t\t} else if(this.state.graph_sel.value === 'is'){\n\t\t\tlet gdp = [];\n\t\t\tlet inv = [];\n\t\t\tlet sav = [];\n\t\t\tfor(let i = 0; i <= params.maxgdp; i += 50){\n\t\t\t\tgdp.push(i);\n\t\t\t\tinv.push(Inv(i,params.K0,params.Iy,params.Ik,params.Iky,params.bari));\n\t\t\t\tsav.push(Sav(i,params.K0,params.Syk,params.Sy,params.Sy2,params.Sy3,params.bars));\n\t\t\t}\n\n\t\t\tlet partialState = Object.assign({}, this.state);\n\t\t\tpartialState.data_is[0].x = gdp;\n\t\t\tpartialState.data_is[0].y = inv;\n\n\t\t\tpartialState.data_is[1].x = gdp;\n\t\t\tpartialState.data_is[1].y = sav;\n\n\t\t\t// See https://github.com/plotly/react-plotly.js#refreshing-the-plot and the discussion here https://github.com/plotly/react-plotly.js/issues/59\n\t\t\tconst newLayout = Object.assign({}, this.state.layout_is);\n\t\t\tnewLayout.yaxis.range = [0,sav[sav.length-1]];\n\t\t\tnewLayout.datarevision = (partialState.layout_is.datarevision + 1) % 10;\n\t\t\tthis.setState({\n\t\t\t\tdata_is: partialState.data_is,\n\t\t\t\tlayout_is: newLayout\n\t\t\t})\n\t\t\t// console.log(this.state)\t\t\t\n\t\t} else if(this.state.graph_sel.value === 'phase'){\n\t\t\tlet gdp = [];\n\t\t\tlet cap_locus = [];\n\t\t\tlet inc_locus = [];\n\t\t\tlet step = 100\n\t\t\tfor(let i = -5000 ; i < params.maxgdp ; i += step){\n\t\t\t\tgdp.push(i)\n\t\t\t\tcap_locus.push((params.bari+params.Iy*i)/(params.delta-params.Iky*i-params.Ik))\n\t\t\t\tinc_locus.push(locus_ydot(i,params.Iy,params.Ik,params.Iky,params.bari,params.Syk,params.Sy,params.Sy2,params.Sy3,params.bars))\n\t\t\t}\n\n\t\t\tlet partialState = Object.assign({}, this.state);\n\t\t\t// if(draw === \"normal\"){\n\t\t\tpartialState.data_phase[0].x = gdp;\n\t\t\tpartialState.data_phase[0].y = inc_locus;\n\t\t\t\n\t\t\tpartialState.data_phase[1].x = gdp;\n\t\t\tpartialState.data_phase[1].y = cap_locus;\n\n\t\t\tpartialState.data_phase[2].x = income;\n\t\t\tpartialState.data_phase[2].y = capital;\n\t\t\t// } \n\t\t\t// else if(draw.includes(\"shock\")){\n\t\t\t// \tlet n_shock = parseFloat(draw.charAt(draw.length-2))\n\t\t\t// \tpartialState.data_phase[n_shock].x = income;\n\t\t\t// \tpartialState.data_phase[n_shock].y = capital;\n\t\t\t// \tpartialState.data_phase[n_shock].z = grid;\n\t\t\t// }\t\t\t\n\n\t\t\tconst newLayout = Object.assign({}, this.state.layout_phase);\n\t\t\tnewLayout.yaxis.range = [0,params.maxcap];\n\t\t\tnewLayout.datarevision = (partialState.layout_phase.datarevision + 1) % 10;\n\n\t\t\tthis.setState({\n\t\t\t\tdata_phase: partialState.data_phase,\n\t\t\t\tlayout_phase: newLayout\n\t\t\t})\n\t\t} else if(this.state.graph_sel.value === 'traj'){\n\t\t\tlet partialState = Object.assign({}, this.state);\n\t\t\tpartialState.data_traj[0].x = time;\n\t\t\tpartialState.data_traj[0].y = income;\n\n\t\t\tpartialState.data_traj[1].x = time;\n\t\t\tpartialState.data_traj[1].y = capital;\n\n\t\t\t// See https://github.com/plotly/react-plotly.js#refreshing-the-plot and the discussion here https://github.com/plotly/react-plotly.js/issues/59\n\t\t\tconst newLayout = Object.assign({}, this.state.layout_traj);\n\t\t\tnewLayout.datarevision = (partialState.layout_traj.datarevision + 1) % 10;\n\t\t\tthis.setState({\n\t\t\t\tdata_traj: partialState.data_traj,\n\t\t\t\tlayout_traj: newLayout\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id = \"page-wrapper\">\n\t\t\t\t<h1>Kaldor (1940)</h1>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"block-2\">\n\t\t\t\t\t\t<div id=\"settings\">\n\t\t\t\t\t\t\t<h4><u>Global parameters</u></h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"block-10\">\n\t\t\t\t\t\t<div id=\"graph_selector\" className=\"row\">\n\t\t\t\t\t\t\t<div className=\"block-2\">\n\t\t\t\t\t\t\t\t<button id=\"is3d_btn\" className={\"btn \" + this.state.graph_sel.is3d_sel} name=\"is3d\" onClick={this.handleGraph}>I&S in 3D</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"block-2\">\n\t\t\t\t\t\t\t\t<button id=\"is_btn\" className={\"btn \" + this.state.graph_sel.is_sel} name=\"is\" onClick={this.handleGraph}>I&S</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"block-2\">\n\t\t\t\t\t\t\t\t<button id=\"phase_btn\" className={\"btn \" + this.state.graph_sel.phase_sel} name=\"phase\" onClick={this.handleGraph}>Phase diagram</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"block-2\">\n\t\t\t\t\t\t\t\t<button id=\"traj_btn\" className={\"btn \" + this.state.graph_sel.traj_sel} name=\"traj\" onClick={this.handleGraph}>Trajectories</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"model\">\n\t\t\t\t\t\t\t<Plot\n\t\t\t\t\t\t\t\tdata={this.state[\"data_\"+this.state.graph_sel.value]}\n\t\t\t\t\t\t\t\tlayout={this.state[\"layout_\"+this.state.graph_sel.value]}\n\t\t\t\t\t\t\t\tstyle={{width: \"100%\", height: \"100%\"}}\n\t\t\t\t\t\t\t\tuseResizeHandler={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root-kaldor_1940')\n);",{"ruleId":"13","severity":1,"message":"14","line":24,"column":7,"nodeType":"15","messageId":"16","endLine":24,"endColumn":12},"no-unused-vars","'steps' is assigned a value but never used.","Identifier","unusedVar"]